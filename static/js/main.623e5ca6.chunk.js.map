{"version":3,"sources":["audio/singleBeep.mp3","audio/done.mp3","utils/helpers.js","hooks/hooks.js","theme/Colors.js","utils/containers.js","components/generic/DisplayTime.js","components/timers/Stopwatch.js","components/generic/Input.js","components/timers/Countdown.js","theme/Typography.js","components/generic/Button.js","components/timers/XY.js","components/timers/Tabata.js","context/TimerProvider.js","components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","components/generic/DisplayRounds.js","components/generic/Navigation.js","components/generic/Queue.js","views/TimersView.js","views/AddView.js","components/generic/Styles.js","App.js","index.js"],"names":["formatTime","time","seconds","Math","floor","minutes","hours","format","hh","mm","ss","convertToMs","Number","useInterval","callback","delay","intervalRef","React","useRef","callbackRef","useEffect","current","window","setInterval","clearInterval","Colors","white","black","gradient","linerGradient","oceanblue300","oceanblue400","oceanblue500","oceanblue600","oceanblue700","springgreen400","springgreen500","springgreen600","carnelian400","carnelian500","carnelian600","orange400","orange500","orange600","orange700","gray500","surfaceDark","pressed","shadow","Panel","styled","div","Container","FlexBetween","FlexCenter","Display","section","Column","span","Section","LargeText","Label","LargeLabel","Rounds","Li","li","ListUl","ul","HR","hr","Border","QueueSurface","QueueCard","NavWrapper","DisplayTime","children","Stopwatch","useContext","TimerContext","laps","length","BoxContainer","input","label","Input","props","value","restSS","setRestSS","restMM","setRestMM","timeVal","setTimeVal","HTMLfor","type","name","min","max","onChange","e","target","id","defaultProps","Countdown","Typography","bold","default","size","small","medium","large","ButtonBase","button","ButtonSelected","ButtonInactive","ButtonStart","ButtonStop","ButtonDone","ButtonArrow","ButtonAdd","ButtonBegin","ButtonRemove","Button","buttonProps","state","setState","setLaps","countReset","fastForward","decrementRounds","incrementRounds","queue","onClick","isRunning","XY","totalXY","Fragment","rounds","Tabata","totalTabata","createContext","TimerProvider","useSound","singleBeep","play","done","doneStop","useState","abs","setTime","getMs","timer","setTimer","getRestMs","initialTime","setQueue","removeItem","index","filter","i","sum","forEach","totalTime","initialState","hasStarted","isFinished","inQueue","totalRoundTime","useReducer","action","currentRound","Error","selected","setSelected","parseInt","hour","totalTimeXY","restSec","restMin","totalTimeTabata","timeElapsed","setTimeElapsed","roundTime","setRoundTime","restTime","setRestTime","setCurrentRound","resting","setResting","count","setCount","currentLap","setCurrentLap","sets","setSets","countUp","countDown","timerDone","roundDone","splice","currentTimer","setCurrentTimer","title","times","stopwatch","countdown","xy","tabata","Provider","TimeDisplay","Wrapper","Title","RenderComponent","Documentation","table","DocumentComponent","this","component","propDocs","map","doc","prop","description","defaultValue","Component","sizeMapping","Dot","color","DotGroup","Loading","DisplayRounds","lapTime","lapNumber","parseFloat","Navigation","StopButtons","Nav","Queue","Timer","Resting","BeginWorkout","to","AddView","GetTimer","selectedStopwatch","selectedCountdown","selectedXY","selectedTabata","GlobalStyle","createGlobalStyle","StyledLi","StyledLink","Link","StyledUl","nav","App","path","element","DocumentationView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.623e5ca6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/singleBeep.da369034.mp3\";","export default __webpack_public_path__ + \"static/media/done.da946ff5.mp3\";","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n\nexport function formatTime(time) {\n   \n    let seconds = Math.floor(time % 60 );\n    let minutes = Math.floor((time / 60) % 60);\n    let hours = Math.floor((time/3600));\n   \n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    return `${hours}:${minutes}:${seconds}`;\n}\n\nexport function format(hh,mm,ss) {\n    \n    let seconds = ss;\n    let minutes = mm;\n    let hours = hh;\n    \n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    return `${hours}:${minutes}:${seconds}`;\n}\n\nexport default function convertToMs(hh, mm, ss) {\n    let minutes = mm * 60;\n    let hour = hh * 3600;\n    let seconds = ss * 1;\n    let milliseconds = minutes + hour + seconds;\n    return Number(milliseconds);\n}\n\n\nexport function totalTimeXY(hh, mm, ss, rounds) {\n    let seconds = Number(ss * 1);\n    let minutes = Number(mm * 60);\n    let hour = Number(hh * 3600);\n    let time = seconds + minutes + hour;\n    let total = Number(time * rounds);\n    \n    return total;\n}\n\nexport function totalTimeTabata(hh, mm, ss, restMM, restSS, rounds) {\n    let seconds = Number(ss * 1);\n    let minutes = Number(mm * 60);\n    let hour = Number(hh * 3600);\n    let time = seconds + minutes + hour;\n\n    let restSec = Number(restSS * 1);\n    let restMin = Number(restMM * 60);\n    let rest = restSec + restMin;\n    \n    let total = Number((time + rest) * rounds);\n    \n    return total;\n}\n","import React from 'react';\n\n\n// Hook created by Dan Abramov in https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n// and help from Comment by Danziger https://stackoverflow.com/questions/53024496/state-not-updating-when-using-react-state-hook-within-setinterval\n\nexport function useInterval(callback, delay) {\n  const intervalRef = React.useRef();\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  React.useEffect(() => {\n    if (typeof delay === 'number') {\n      intervalRef.current = window.setInterval(() => callbackRef.current(), delay);\n      return () => window.clearInterval(intervalRef.current);\n    }\n  }, [delay]);\n  \n  return intervalRef;\n}\n\nexport default useInterval;","const Colors = {\n    white: '#ffffff',\n    black: '#000000',\n    gradient: 'linear-gradient(to right, #6D67C1, #5e57c7, #453DB8)',\n    linerGradient: 'linear-gradient(to right, #342D9F, #4037C4, #342D9F)',\n   \n    oceanblue300: '#6760D2',\n    oceanblue400: '#5850CE',\n    oceanblue500: '#4037C4',\n    oceanblue600: '#342D9F',\n    oceanblue700: '#2F288F',\n\n    springgreen400: '#25A76F',\n    springgreen500: '#057C48',\n    springgreen600: '#046239',\n\n\n    carnelian400:'#DD2C32',\n    carnelian500: '#AD0A0F',\n    carnelian600: '#87080C',\n\n    orange400: '#F48D3E',\n    orange500: '#DE6A12',\n    orange600: '#BD5404',\n    orange700: '#B45004',\n    \n    gray500: '#4A4A55',\n    surfaceDark: '#25253C',\n\n    pressed: 'inset 1px 1px 5px #25253C',\n    shadow: 'drop-shadow(2px 2px 4px rgba(51,51,51,0.35))',\n}\n\nexport default Colors;","import styled from 'styled-components';\nimport Colors from '../theme/Colors';\n\nexport const Panel = styled.div`\n  box-sizing: border-box;\n  background: ${Colors.surfaceDark};\n  background: linear-gradient(90deg, rgba(37,37,60,1) 0%, rgba(47,47,55,1) 100%);\n  border-radius: 16px;\n  padding: 2rem;\n  display: block;\n  overflow: auto;\n  box-shadow:  1px 1px 5px #2F2F37;\n  margin: auto;\n  width: 60%;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-content: center;\n  justify-content: space-evenly;\n  vertical-align: center;\n  margin: 0.5rem;\n  flex-wrap: wrap;\n`;\n\nexport const FlexBetween = styled(Container)`\n  justify-content: space-between;\n  min-width: 80px;\n \n  & > span::after {\n    content: '|';\n    color: ${Colors.black};\n    margin: 10px;\n  }\n  & > span:last-child::after {\n    content: '';\n  }\n`;\n\nexport const FlexCenter = styled(Container)`\n  justify-content: center;\n`;\n\nexport const Display = styled.section`\n  box-sizing: border-box;\n  border: none;\n  height: max-content;\n  margin: auto;\n  overflow: auto;\n  width: 100%;\n  text-align: center;\n  background-color: #484661;\n  border-radius: 8px;\n  color: white;\n  box-shadow: inset 0 0 10px #1C1C21;\n  font-family: 'Inconsolata', monospace;\n`;\n\nexport const Column = styled.span`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Section = styled.section`\n  margin: 2.5rem;\n`;\n\nexport const LargeText = styled.div`\n  font-size: 48px;\n  font-weight: 400;\n  margin: auto 1rem;\n`;\n\nexport const Label = styled.div`\n  display: block;\n  font-size: 16px;\n  text-align: center;\n  vertical-align: middle;\n  font-family: 'Inconsolata', monospace;\n  margin: 0;\n`;\n\nexport const LargeLabel = styled(Label)`\n  font-size: 20px;\n  width: auto;\n  font-family: 'Inconsolata', monospace;\n`;\n\nexport const Rounds = styled.div`\n  font-family: 'Inconsolata', monospace;\n  box-sizing: border-box;\n  overflow: auto;\n  font-size: 24px;\n  font-weight: 400;\n  vertical-align: middle;\n  display: block;\n  text-align: center;\n  margin: 4px auto;\n`;\n\nexport const Li = styled.li`\n  font-size: 18px;\n  font-family: 'Inconsolata', monospace;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem auto;\n`;\n\nexport const ListUl = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: scroll;\n  padding: 1rem 0 0 0;\n  max-height: 200px;\n`;\n\nexport const HR = styled.hr`\n  border: 0;\n  height: 1px;\n  background: ${Colors.surfaceDark};\n  background-image: linear-gradient(to right, #342D9F, #4037C4, #342D9F);\n`;\n\nexport const Border = styled.div`\n  background: ${Colors.oceanblue500};\n  border-radius: 16px;\n  padding: 1.5rem;\n`;\n\nexport const QueueSurface = styled.div`\n  // background: ${Colors.oceanblue700};\n  // background: #3E3B54;\n  border-radius: 16px;\n  padding: 1.5rem;\n  min-width: 500px;\n  max-width: 700px;\n  margin: 0 auto 10rem auto;\n  text-align: center;\n  `;\n\nexport const QueueCard = styled.div`\n  background: ${Colors.oceanblue700};\n  align-content: center;\n  justify-content: center;\n  margin: 16px;\n  font-size: 20px;\n  border-radius: 16px;\n  position: relative;\n  height: 100px;\n  display: flex;\n  padding: 20px;\n  `;\n\nexport const NavWrapper = styled.div`\n  margin: auto;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  left: 0;\n  right: 0;\n`;\n\nexport default Display;","import React from 'react';\nimport Display from '../../utils/containers';\n\n\nexport const DisplayTime = ({children}) => {\n\n  return (\n    <Display>\n      {children}\n    </Display>\n  );\n}\n  \nexport default DisplayTime;","import React, { useContext } from 'react';\nimport { TimerContext } from '../../context/TimerProvider';\nimport { Panel, Section, Label, LargeText} from '../../utils/containers';\nimport { formatTime } from '../../utils/helpers';\nimport DisplayTime from '../generic/DisplayTime';\n\n//    Stopwatch\n//    A timer that counts up to X amount of time\n//   (e.g.count up to 2 minutes and 30 seconds, starting at 0)\n\nconst Stopwatch = () => {\n  const {\n    laps,\n    time\n  } = useContext(TimerContext);\n  \n  return (\n    <Panel>\n      <DisplayTime>\n        <Section>\n          <LargeText>{formatTime(time)}</LargeText>\n          <Label>Current Lap: {laps.length + 1}</Label>\n        </Section>\n      </DisplayTime>\n    </Panel>\n  );\n}\n\nexport default Stopwatch;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TimerContext } from '../../context/TimerProvider';\n\nconst BoxContainer = styled.div `\n  text-align: center;\n  margin: auto;\n  padding: 1rem;\n  overflow: auto;\n  box-sizing: border-box;\n  border: none;\n  display: block;\n  font-size: 16px;\n  vertical-align: baseline;\n  cursor: pointer; \n`;\n  \nconst Number = styled.input`\n  width: 64px;\n  height: 40px;\n  display: block;\n  font-family: 'Inconsolata', monospace;\n  font-size: 20px;\n  font-height: 24px;\n  font-weight: 500;\n  color: #f2f2f2;\n  background-color: #4A4A55;\n  border: none;\n  text-align: center;\n  padding: 0px;\n  margin: 8px;\n  border-radius: 8px;\n  cursor: pointer; \n`;\n\nconst Label = styled.label`\n  font-family: 'Courier Prime', monospace;\n  font-size: 16px;\n  color: white;\n  border: none;\n  text-align: center;\n  margin: auto;\n  text-align: center;\n`;\n\nexport const Input = (props) => {\n\n  const { value } = props;\n  \n  const {\n    restSS,\n    setRestSS,\n    restMM,\n    setRestMM,\n    timeVal,\n    setTimeVal\n  } = useContext(TimerContext);\n\n  switch (value) {\n    case 'hh':\n      return (\n        <BoxContainer>\n          <Label\n            HTMLfor='Hours'\n            value={timeVal.hh}>\n            Hours\n          </Label>\n          <Number\n            type='number'\n            name='Hours'\n            min='0' max='59'\n            onChange={(e) => {\n              setTimeVal({ ...timeVal, hh: e.target.value });\n            }}\n            value={timeVal.hh}\n            id='options' />\n        </BoxContainer>\n      );\n    case 'mm':\n      return (\n        <BoxContainer>\n          <Label\n            HTMLfor='Minutes'\n            value={timeVal.mm}>\n            Minutes\n          </Label>\n          <Number\n            type='number'\n            name='Minutes'\n            min='0' max='59' \n            onChange={(e) => {\n              setTimeVal({ ...timeVal, mm: e.target.value });\n             }}\n            value={timeVal.mm}\n            id='options' />\n        </ BoxContainer>\n      );\n    case 'ss':\n      return (\n        <BoxContainer>\n          <Label\n            HTMLfor='Seconds'\n            value={timeVal.ss}>\n            Seconds\n          </Label>\n          <Number\n            type='number'\n            min='0' max='59' \n            name='Seconds'\n            onChange={(e) => {\n              setTimeVal({ ...timeVal, ss: e.target.value });\n              }}\n            value={timeVal.ss}\n            id='options' />\n        </ BoxContainer>\n      );\n    case 'restMM':\n      return (\n        <BoxContainer>\n          <Label\n            HTMLfor='RestMinutes'\n            value={restMM}>\n            Minutes\n          </Label>\n          <Number\n            type='number'\n            min='0' max='59' \n            name='RestMinutes'\n            onChange={(e) => setRestMM(e.target.value)}\n            value={restMM}\n            id='options' />\n        </ BoxContainer>\n      );\n    case 'restSS':\n      return (\n        <BoxContainer>\n          <Label\n            HTMLfor='RestSeconds'\n            value={restSS}>\n            Seconds\n          </Label>\n          <Number\n            type='number'\n            min='0' max='59' \n            name='RestSeconds'\n            onChange={(e) => setRestSS(e.target.value)}\n            value={restSS}\n            id='options' />\n        </ BoxContainer>\n      );\n  }\n}\n\nInput.defaultProps = {\n  type: 'number',\n};\n\nexport default Input;\n\n","import React, { useContext } from 'react';\nimport { TimerContext } from '../../context/TimerProvider';\nimport { Panel, Container, Section, LargeText } from '../../utils/containers';\nimport DisplayTime from '../generic/DisplayTime';\nimport Input from '../generic/Input';\nimport { format } from '../../utils/helpers';\n\n//  Countdown\n//  A timer that counts down from X amount of time\n//  (e.g.count down to 0, starting at 2 minutes and 30)\n\nconst Countdown = () => {\n\n  const {\n    timeVal,\n  } = useContext(TimerContext);\n \n  return (\n    <Panel>\n      <DisplayTime>\n        <Section>\n          <LargeText>\n            {format(timeVal.hh, timeVal.mm, timeVal.ss)}\n         </LargeText>\n        </Section>\n      </DisplayTime>\n      <Container>\n        <Input value='hh' />\n        <Input value='mm' />\n        <Input value='ss' />\n      </Container>\n    </Panel>\n  );\n}\n\nexport default Countdown;","const Typography = {\n    //Weights\n    bold: 600,\n\n    //Sizes\n    default: '16px',\n\n    //Fonts\n\n};\n\nexport default Typography;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TimerContext } from '../../context/TimerProvider';\nimport Colors from '../../theme/Colors';\nimport Typography from '../../theme/Typography';\nimport PropTypes from 'prop-types';\n\nconst size  = {\n  small: 10,\n  medium: 42,\n  large: 54,\n};\n\n\nconst ButtonBase = styled.button `\n  display: inline;\n  justify-content: center;\n  align-content: center;\n  vertical-align: middle;\n  text-align: center;\n  margin: 0.5rem auto;\n  padding: 1rem 2rem;\n  width: auto;\n  height: ${(props) => props.size}px;\n  min-width: ${(props) => props.size}px;\n  border-radius: 8px;\n  \n  overflow: auto;\n  border: none;\n  font-size: ${Typography.default};\n  color: ${Colors.white};\n  background-color: ${Colors.oceanblue500};\n  box-shadow: inset 2px 2px 5px ${Colors.oceanblue400};\n  filter: ${Colors.shadow};\n  cursor: pointer;\n  &:hover {\n    background-color: ${Colors.oceanblue600};\n    box-shadow: inset 2px 2px 5px ${Colors.oceanblue500};\n  }\n  &:active {\n    background-color: ${Colors.oceanblue600};\n    font-weight: ${Typography.bold};\n    box-shadow: ${Colors.pressed};\n  }\n`;\n\nconst ButtonSelected = styled(ButtonBase)`\n  background-color: ${Colors.oceanblue400};\n  box-shadow: inset 1px 1px 5px ${Colors.oceanblue500};\n  font-weight: ${Typography.bold};\n`;\n\nconst ButtonInactive = styled(ButtonBase)`\n  background-color: ${Colors.oceanblue600};\n  box-shadow: inset 1px 1px 5px ${Colors.oceanblue700};\n  font-weight: ${Typography.bold};\n  &:hover {\n    background-color: ${Colors.oceanblue700};\n    box-shadow: inset 2px 2px 5px ${Colors.oceanblue600};\n  }\n`;\n\n\nconst ButtonStart = styled(ButtonBase)`\n  background: ${Colors.springgreen500};\n  box-shadow: inset 2px 2px 5px ${Colors.springgreen400};\n    &:hover {\n      background-color: ${Colors.springgreen600};\n      box-shadow: inset 3px 3px 5px ${Colors.springgreen500};\n    }\n    &:active {\n      background-color: ${Colors.springgreen600};\n      box-shadow: ${Colors.pressed};\n    }\n`;\n\nconst ButtonStop = styled(ButtonBase)`\n  background: ${Colors.carnelian500};\n  box-shadow: inset 2px 2px 5px ${Colors.carnelian400};\n  &:hover {\n    background-color: ${Colors.carnelian600};\n    box-shadow: inset 2px 2px 5px ${Colors.carnelian500};\n  }\n  &:active {\n    background-color: ${Colors.carnelian600};\n    box-shadow: ${Colors.pressed};\n  }\n`;\n\nconst ButtonDone = styled(ButtonStop)`\n  background: ${Colors.orange500};\n  box-shadow: inset 2px 2px 5px ${Colors.orange400};\n  &:hover {\n    background-color: ${Colors.orange600};\n    box-shadow: inset 2px 2px 5px ${Colors.orange500};\n  }\n  &:active {\n    background-color: ${Colors.orange700};\n    box-shadow: ${Colors.pressed};\n  }\n`;\n\nconst ButtonArrow = styled(ButtonBase)`\n  padding: 0.25rem 0.5rem; \n  line-height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n  min-width: ${(props) => props.size}px;\n  height: auto;\n  font-size: 12px;\n  margin: auto;\n`;\n\nconst ButtonAdd = styled(ButtonBase)`\n  background-color: ${Colors.oceanblue700};\n`;\n\nconst ButtonBegin = styled(ButtonBase)`\n  background-color: ${Colors.oceanblue700};\n  border-radius: 50%;\n  line-height: normal;\n  font-weight: ${Typography.bold};\n  font-size: 16px;\n  width: 160px;\n  height:  160px;\n  display: inline;\n  vertical-align: center;\n  border: solid 2px ${Colors.oceanblue300};\n  box-shadow: 0 0 0 8px ${Colors.oceanblue700};\n  margin: auto;\n  padding: 0;\n  \n  &:hover {\n    padding: 2.15rem;\n    font-size: 18px;\n    background-color: ${Colors.oceanblue600};\n    box-shadow: 0 0 0 8px ${Colors.oceanblue700};\n    box-shadow: inset 2px 2px 5px ${Colors.oceanblue500};\n    transition: .5s ease;\n  }\n`;\n\nconst ButtonRemove = styled(ButtonBase)`\n  background: ${Colors.surfaceDark};\n  border-radius: 50%;\n  width: 42px;\n  height: 42px;\n  padding: 0;\n  font-size: 24px;\n  line-height: normal;\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  min-width: ${(props) => props.size}px;\n  box-shadow: inset 2px 2px 5px ${Colors.surfaceDark};\n  margin: 0;\n\n  &:hover {\n    background-color: ${Colors.gray500};\n    box-shadow: 0 0 0 8px ${Colors.oceanblue500};\n    box-shadow: inset 2px 2px 5px ${Colors.surfaceDark};\n    transition: .5s ease;\n  }\n`;\n\nconst Button = (props) => {\n  const { children, type, ...buttonProps } = props;\n\n  const {\n    time,\n    state,\n    setState,\n    laps,\n    setLaps,\n    countReset,\n    fastForward,\n    decrementRounds,\n    incrementRounds,\n    queue,\n  } = useContext(TimerContext);\n\n  switch (type) {\n    default:\n      return (\n        <ButtonBase size={size}\n          {...buttonProps}>\n          {children}\n        </ButtonBase>\n      );\n    case 'start':\n      return (\n        <ButtonStart\n          {...buttonProps}\n          onClick={() => {\n            setState({\n              type: state.isRunning ? 'stop' : 'start'\n            })\n          }}>\n          Start\n        </ButtonStart>\n      );\n    case 'stop':\n      return (\n        <ButtonStop\n          {...buttonProps}\n          onClick={() => {\n            setState({\n              type: state.isRunning ? 'stop' : 'start'\n            })\n          }}>\n          Stop\n        </ButtonStop>\n      );\n      case 'done':\n        return (\n          <ButtonDone\n            {...buttonProps}\n            onClick={() => {\n              setState({type: 'done'})\n            }}>\n            Done\n          </ButtonDone>\n        );\n    case 'lap':\n      return (\n        <ButtonBase\n          {...buttonProps}\n          onClick={() => {\n            if (state.isRunning) {\n              setLaps([...laps, time]);\n            }\n          }}>\n          Lap\n          </ButtonBase>\n      );\n    case 'reset':\n      return (\n        <ButtonBase\n          {...buttonProps}\n          onClick={countReset}\n        >\n          Reset\n        </ButtonBase>\n      );\n    case 'skip':\n      return (\n        <ButtonBase\n          {...buttonProps}\n          onClick={fastForward}\n        >\n          Skip\n        </ButtonBase>\n      );\n    case 'selected':\n      return (\n        <ButtonSelected\n          {...buttonProps}>\n            {children}\n        </ButtonSelected>\n      );\n      case 'inactive':\n        return (\n          <ButtonInactive\n            {...buttonProps}>\n              {children}\n          </ButtonInactive>\n        );\n      \n    case 'add':\n      return (\n        <ButtonAdd\n          {...buttonProps}>\n          Add to Queue\n        </ButtonAdd>\n      );\n      case 'remove':\n        return (\n          <ButtonRemove size='medium'\n            {...buttonProps}\n          >\n            &#x02A2F;\n          </ButtonRemove>\n        );\n    case 'begin': \n    return (\n      <ButtonBegin\n        {...buttonProps}\n      > {queue.length === 0 ? 'Begin' : 'Add More'}\n      </ButtonBegin>\n    );\n    case 'arrowUp':\n      return (\n        <ButtonArrow size='small'\n          {...buttonProps}\n          onClick={incrementRounds}>\n          &#9650;\n        </ButtonArrow>\n      );\n    case 'arrowDown':\n      return (\n        <ButtonArrow size='small'\n          {...buttonProps}\n          onClick={decrementRounds}>\n          &#9660;\n        </ButtonArrow>\n      );\n    \n  }\n};\n\nButton.propTypes = {\n  size: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),\n};\n\nButton.defaultProps = {\n  type: 'default',\n  size: 'large'\n};\n\nexport default Button;","import React, { useContext } from 'react';\nimport { TimerContext } from '../../context/TimerProvider';\nimport { Panel, Container, FlexCenter, LargeLabel, Section, Column, LargeText } from '../../utils/containers';\nimport { format, formatTime } from '../../utils/helpers';\nimport DisplayTime from '../generic/DisplayTime';\nimport Button from '../generic/Button';\nimport Input from '../generic/Input';\n\n//    XY\n//    A timer that counts down from X time per round, for Y number of rounds\n//   (e.g. 1 minute for 10 minutes would count down from 1 minute to 0,\n//   then start another countdown, etc, 10 times ) \n\nconst XY = ({children}) => {\n\n  const {\n    state,\n    totalXY,\n    timeVal\n  } = useContext(TimerContext);\n\n  return (\n    <React.Fragment>\n      <Panel>\n        <DisplayTime>\n          <Section>\n            <LargeLabel>Total Time:</LargeLabel>\n            <LargeText>{formatTime(totalXY)}</LargeText>\n          </Section>\n        </DisplayTime>\n        <Section>\n          <LargeLabel>Select Rounds:</LargeLabel>\n          <FlexCenter>\n            <LargeText>{state.rounds}</LargeText>\n            <Column>\n              <Button type='arrowUp' />\n              <Button type='arrowDown' />\n            </Column>\n          </FlexCenter>\n        </Section>\n        <Section>\n        <LargeLabel>Set Round Time: {format(timeVal.hh, timeVal.mm, timeVal.ss)}</LargeLabel>\n          <Container>\n            <Input value='hh' />\n            <Input value='mm' />\n            <Input value='ss' />\n          </Container>\n        </Section>\n      </Panel>\n    </React.Fragment>\n  );\n}\n  \n  export default XY;","import React, { useContext } from 'react';\nimport { TimerContext } from '../../context/TimerProvider';\nimport { Panel, Container, Section, LargeLabel, LargeText, Border, Column, FlexCenter} from '../../utils/containers';\nimport DisplayTime from '../generic/DisplayTime';\nimport Button from '../generic/Button';\nimport Input from '../generic/Input';\nimport { formatTime, format } from '../../utils/helpers';\n\n// TABATA\n//  An interval timer with work / rest periods.\n//  Example: 20s / 10s, 8 rounds, would count down from 20 seconds to 0,\n//  then count down from 10 seconds to 0, then from 20, then from 10, etc, \n//  for 8 rounds. A full round includes both the work and rest.\n//  In this case, 20 + 10=30 seconds per round. \n\nconst Tabata = ({children}) => {\n\n  const {\n    restMM,\n    restSS,\n    state,\n    totalTabata,\n    timeVal,\n  } = useContext(TimerContext);\n\n  return (\n    <Panel>\n      <DisplayTime>\n        <Section>\n          <LargeLabel>Total Time:</LargeLabel>\n          <LargeText>{formatTime(totalTabata)}</LargeText>\n        </Section>\n      </DisplayTime>\n      <Section>\n        <LargeLabel>Select Rounds:</LargeLabel>\n        <FlexCenter>\n          <LargeText>{state.rounds}</LargeText>\n          <Column>\n            <Button type='arrowUp' />\n            <Button type='arrowDown' />\n          </Column>\n        </FlexCenter>\n      </Section>\n      <Section>\n        <LargeLabel>Set Round Time: {format(timeVal.hh, timeVal.mm, timeVal.ss)}</LargeLabel>\n        <Container>\n          <Input value='hh' />\n          <Input value='mm' />\n          <Input value='ss' />\n        </Container>\n      </Section>\n      <Section>\n        <Border>\n          <LargeLabel>Set Rest Time: {format(0, restMM, restSS)}</LargeLabel>\n          <Container>\n            <Input value='restMM' />\n            <Input value='restSS' />\n          </Container>\n        </Border>\n      </Section>\n    </Panel>\n  );\n}\n  \nexport default Tabata;","import React, { useReducer, useState, createContext, useEffect } from 'react';\nimport useSound from 'use-sound';\nimport singleBeep from '../audio/singleBeep.mp3';\nimport done from '../audio/done.mp3';\nimport convertToMs from '../utils/helpers';\nimport { totalTimeXY, totalTimeTabata } from '../utils/helpers';\nimport { formatTime } from '../utils/helpers';\nimport useInterval from '../hooks/hooks';\nimport Stopwatch from '../components/timers/Stopwatch';\nimport Countdown from '../components/timers/Countdown';\nimport XY from '../components/timers/XY';\nimport Tabata from '../components/timers/Tabata';\n\nexport const TimerContext = createContext({});\n\nconst TimerProvider = ({ children }) => {\n    \n    //Sounds\n    const [play] = useSound(singleBeep);\n    const [doneStop] = useSound(done);\n\n    //Get Input\n    const [timeVal, setTimeVal] = useState({\n        hh: Math.abs(0),\n        mm: Math.abs(0),\n        ss: Math.abs(0),\n    });\n\n   \n    const [time, setTime] = useState(0);\n    const getMs = Number(convertToMs(timeVal.hh, timeVal.mm, timeVal.ss));\n    const [timer, setTimer] = useState(getMs);\n    const getRestMs = Number(convertToMs(0, timeVal.mm, timeVal.ss));\n\n    const initialQueue = {\n        initialTime: ''\n    };\n\n    const [queue, setQueue] = useState([], initialQueue);\n\n   function removeItem(index) {\n        if (queue.length > 0) {\n            setQueue(queue =>\n                queue.filter((value, i) => i !== index));\n        }\n    };\n\n    var sum = 0;\n\n    queue.forEach(timer => {\n        sum += Number(timer.totalTime);\n    });\n\n    \n    const initialState = {\n        hasStarted: false,\n        isRunning: queue.isRunning,\n        isFinished: false,\n        inQueue: false,\n        initialTime: 0,\n        totalTime: 0,\n        totalRoundTime: 0,\n        rounds: 1,\n        timer: '',\n    };\n\n    function StateReducer(state, action) {\n        switch (action.type) {\n            case 'start': {\n                \n                if(!state.hasStarted && queue.length !== 0) {\n                    setTime(queue[0].initialTime);\n                }\n                return { ...state, hasStarted: true, isRunning: true, initialTime: time};\n            }\n            case 'stop':\n                return { ...state, isRunning: false};\n            case 'done':\n                if (queue.length === 1) {\n                    removeItem(0);\n                    return {...state, isRunning: false}\n                } else if (queue.length > 1) {\n                    removeItem(0);\n                    setTime(queue[1].initialTime);\n                     return { ...state, isRunning: true};\n                }\n                break;\n            case 'reset':\n                return {\n                    isRunning: false,\n                    rounds: 1,\n                    setQueue: [],\n                    totalTime: 0,\n                };\n            case 'lap': {\n                return { time: state.time + 1 }\n            }\n            case 'fastForward': {\n                if (rounds <= 1) {\n                    return { ...state, isRunning: true, rounds: 1 }\n                } else {\n                    return { ...state, isRunning: true, rounds: state.rounds - 1 };\n                }\n            }\n            case 'countUp':\n                return { ...state, time: state.time + 1, currentRound: state.currentRound };\n            case 'countDown':\n                return { ...state, time: state.time - 1, currentRound: state.currentRound };\n            case 'incrementRounds':\n                return { ...state, rounds: state.rounds + 1 };\n            case 'decrementRounds':\n                if (rounds <= 1) {\n                    return { ...state, rounds: 1 }\n                } else {\n                    return { ...state, rounds: state.rounds - 1 };\n                }\n            case 'running':\n                return { ...state, isRunning: true, };\n            case 'inQueue':\n               \n                return {...state, isRunning: false, isFinished: false, inQueue: true, time: state.initialTime};\n            \n            default:\n                throw new Error();\n        }\n    }\n\n    const [state, setState] = useReducer(StateReducer, initialState);\n\n    const {\n        isRunning,\n        totalTime,\n        rounds,\n    } = state;\n\n    const [selected, setSelected] = useState({ Stopwatch: true, Countdown: false, XY: false, Tabata: false });\n    const [restMM, setRestMM] = useState(0);\n    const [restSS, setRestSS] = useState(0);\n    const totalXY = parseInt(totalTimeXY(timeVal.hh, timeVal.mm, timeVal.ss, state.rounds));\n    const totalTabata = parseInt(totalTimeTabata(timeVal.hh, timeVal.mm, timeVal.ss, restMM, restSS, state.rounds));\n    const [timeElapsed, setTimeElapsed] = useState(0);\n \n    const [roundTime, setRoundTime] = useState(0);\n\n    const [restTime, setRestTime] = useState(getRestMs);\n    const [currentRound, setCurrentRound] = useState(1);\n    const [resting, setResting] = useState(false);\n\n    const [count, setCount] = useState(0);\n    const [laps, setLaps] = useState([]);\n    const [currentLap, setCurrentLap] = useState(0);\n    const [sets, setSets] = useState(0);\n\n    function incrementRounds() {\n        setState({ type: 'incrementRounds' });\n    }\n\n    function decrementRounds() {\n        setState({ type: 'decrementRounds' });\n    }\n\n    function countUp() {\n        setTime(Math.abs(time + 1));\n        return Number(time);\n    }\n\n    function countDown() {\n        setTime(Math.abs(time - 1));\n        return Number(time);\n    }\n    \n    function timerDone() {\n        setTime(0);\n        countReset();\n        setState({ type: 'stop' });\n        doneStop();\n    }\n\n    function roundDone() {\n        play();\n    }\n  \n    function countReset() {\n        setState({ type: 'reset' });\n        setTime(0);\n        setRestSS(0);\n        setRestMM(0);\n        setCurrentRound(1);\n        laps.splice(0, laps.length + 1);\n        queue.splice(0, queue.length);\n        setTimeElapsed(0);\n    }\n    \n    function fastForward() {\n        if (selected.XY) {\n            if (totalTime < 1) {\n                countReset();\n                timerDone();\n                setState({ type: 'stop' });\n            } else {\n                setState({ type: 'fastForward' });\n                setTime(roundTime - 1);\n            }\n        } else {\n            if (totalTime < 1) {\n                countReset();\n                timerDone();\n                setState({ type: 'stop' });\n            } else {\n                setState({ type: 'fastForward' });\n                setTime(roundTime - 1);\n                setResting(false);\n            }\n        }\n    }\n    \n     \nconst [currentTimer, setCurrentTimer] = useState('');\n\n    useEffect(() => {\n       \n            if (!state.hasStarted && state.isRunning) {\n                if (currentTimer === 'XY') { \n                    if(time === 0 && queue.length !== 0){\n                        removeItem(0); \n                    } else if (time === 0 && currentRound <= state.rounds) {\n                        setCurrentRound(currentRound + 1);\n                        setTime(queue[0].totalRoundTime);\n                    }\n                }\n            } else if (state.hasStarted && state.isRunning && time === 0) {\n                if (currentTimer === 'XY') {\n                    if (currentRound < state.rounds) {\n                        if(queue.length === 1) { // LAST TIMER\n                            setCurrentRound(currentRound + 1);\n                            setTime(queue[0].initialTime); \n                            roundDone(); \n                        } else {\n                            setCurrentRound(currentRound + 1);\n                            setTime(queue[0].initialTime); \n                        }\n                    } else if (currentRound === state.rounds) {\n                        if(queue.length > 1) {\n                            removeItem(0);\n                            setCurrentRound(1);\n                            setTime(queue[1].initialTime); \n                        } else if(queue.length === 1){ //Done\n                            removeItem(0);\n                            countReset();\n                            timerDone();\n                            setState({ type: 'stop' });\n                        }\n                    }   \n                }\n                if(currentTimer === 'Tabata') {\n                    if(!resting){\n                        setResting(true);\n                        setTime(queue[0].restTime);\n                    } else {\n                    setResting(false);\n                    }\n                    if (currentRound < state.rounds && resting) {\n                        if(queue.length === 1) { \n                            setCurrentRound(currentRound + 1);\n                            setTime(queue[0].initialTime); \n                            roundDone(); \n                        } else {\n                            setCurrentRound(currentRound + 1);\n                            setTime(queue[0].initialTime); \n                            roundDone(); \n                        }\n                    } else if (currentRound === state.rounds && resting) {\n                        if(queue.length > 1) {\n                            removeItem(0);\n                            setCurrentRound(1);\n                            setTime(queue[1].initialTime); \n                        } else if(queue.length === 1){ \n                            removeItem(0);\n                            countReset();\n                            timerDone();\n                            setState({ type: 'stop' });\n                        }\n                    }\n                }\n            }\n    \n\n        if (!state.hasStarted && state.isRunning && time === 0 && queue.length !== 0 && currentTimer === 'Countdown') {\n                removeItem(0); \n        } else if (state.hasStarted && state.isRunning && time === 0 && queue.length > 1 && currentTimer === 'Countdown') {\n                removeItem(0);\n                setTime(queue[1].initialTime); \n        } else if (state.hasStarted && state.isRunning && time === 0 && queue.length === 1 && currentTimer === 'Countdown') {\n                removeItem(0);\n                countReset();\n                timerDone();\n                setState({ type: 'stop' });\n        } \n    },[time]);\n\n\n\n\n    const intervalRef = useInterval(() => {\n        setTimeElapsed(Number(timeElapsed + 1));\n        if (state.hasStarted && state.isRunning && queue > 0) {\n            setTime(queue[0].initialTime);\n        } \n        if(state.isRunning) {\n            if (queue[0].title === 'Stopwatch') {\n                setCurrentTimer('Stopwatch');\n                setTime(countUp);\n            } else if (queue[0].title === 'Countdown') {\n                setCurrentTimer('Countdown');\n                setTime(queue[0].initialTime);\n                setTime(countDown);\n            } else if (queue[0].title === 'XY') {\n                setCurrentTimer('XY');\n                setTime(queue[0].initialTime);\n                setTime(countDown);\n            } else if (queue[0].title === 'Tabata') {\n                setCurrentTimer('Tabata');\n                setTime(queue[0].initialTime);\n                setTime(countDown);\n            } \n        } else {\n          window.clearInterval(intervalRef.current);\n        } \n    }, state.isRunning ? 1000 : null);\n   \n    const TimeDisplay = () => {\n        if (queue.length < 0) {\n          return formatTime(time);\n        } else {\n          return formatTime(time);\n        }\n    }\n    const times = {\n        stopwatch: {\n            title: 'Stopwatch',\n            timer: <Stopwatch />,\n            initialTime: 0,\n            isRunning: state.isRunning,\n            isFinished: false,\n            inQueue: true,\n            totalTime: 0,\n        },\n        countdown: {\n            title: 'Countdown',\n            timer: <Countdown/>,\n            initialTime: getMs,\n            isRunning: state.isRunning,\n            isFinished: false,\n            inQueue: true,\n            totalTime: getMs,\n            totalRoundTime: 0,\n        },\n        xy: {\n            title: 'XY',\n            timer: <XY />,\n            initialTime: getMs,\n            isRunning: state.isRunning,\n            isFinished: false,\n            inQueue: true,\n            totalTime: (getMs * state.rounds),\n            totalRoundTime: getMs,\n            rounds: state.rounds,\n        },\n        tabata: {\n            title: 'Tabata',\n            timer: <Tabata />,\n            initialTime: getMs,\n            isRunning: state.isRunning,\n            isFinished: false,\n            inQueue: true,\n            totalTime: ((getMs + getRestMs) * state.rounds),\n            totalRoundTime: getMs,\n            rounds: state.rounds,\n            restTime: getRestMs,\n        }\n    };\n    \n   var total = sum - Number(timeElapsed);\n\n    return (\n        <TimerContext.Provider\n            value={{\n                timeElapsed,\n                sum,\n                TimeDisplay,\n                timeVal,\n                setTimeVal,\n                removeItem,\n                getMs,\n                setTime,\n                time,\n                timer,\n                setTimer,\n                queue,\n                setQueue,\n                selected,\n                setSelected,\n                count,\n                setCount,\n                initialState,\n                totalXY,\n                totalTabata,\n                laps,\n                setLaps,\n                sets,\n                setSets,\n                rounds,\n                currentRound,\n                setCurrentRound,\n                incrementRounds,\n                decrementRounds,\n                isRunning,\n                state,\n                setState,\n                totalTime,\n                restSS, setRestSS,\n                restMM, setRestMM,\n                countReset,\n                fastForward,\n                countUp,\n                countDown,\n                timerDone,\n                play,\n                doneStop,\n                roundDone,\n                getRestMs,\n                roundTime,\n                setRoundTime,\n                restTime,\n                setRestTime,\n                currentLap,\n                setCurrentLap,\n                resting,\n                setResting,\n                 times\n            }}\n        >\n            \n            {children}\n        </TimerContext.Provider>\n    );\n};\n\nexport default TimerProvider;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","import React from 'react';\nimport styled from 'styled-components';\nimport DocumentComponent from '../components/documentation/DocumentComponent';\nimport Loading from '../components/generic/Loading';\nimport Button from '../components/generic/Button';\nimport { Section } from '../utils/containers';\nimport Input from '../components/generic/Input';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  background-color: #h2h2h2;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    return (\n      <Section>\n      <Container>\n        <div>\n          <Title>Documentation</Title>\n          <DocumentComponent\n            title='Loading spinner '\n            component={<Loading />}\n            propDocs={[\n              {\n                prop: 'size',\n                description: 'Changes the size of the loading spinner',\n                type: 'string',\n                defaultValue: 'medium',\n              },\n            ]}\n          />\n          <DocumentComponent\n            title='Button'\n            component={<Button type='default' value='default'>Button</Button>}\n            propDocs={[\n              {\n                prop: 'type',\n                description: 'Changes the type of button',\n                type: 'string',\n                defaultValue: 'default',\n              },\n              {\n                prop: 'size',\n                description: 'Changes the size of button',\n                type: 'string',\n                defaultValue: 'medium',\n              },\n              {\n                prop: 'onClick',\n                description: 'Binds the onClick',\n                type: 'n/a',\n                defaultValue: 'n/a',\n              },\n              {\n                prop: 'onChange',\n                description: 'Binds the onChange',\n                type: 'Function',\n                defaultValue: 'n/a',\n              },\n              \n            ]}\n            />\n            <DocumentComponent\n            title='Input'\n            component={<Input value='mm' />}\n            propDocs={[\n              {\n                prop: 'HTMLfor',\n                description: 'Specifies which form element a label is bound to.',\n                type: 'string',\n                defaultValue: 'n/a',\n              },\n              {\n                prop: 'value',\n                description: 'Value of prop',\n                type: 'string, number, function ',\n                defaultValue: 'n/a',\n              },\n              {\n                prop: 'type',\n                description: 'Sets type of input',\n                type: 'string',\n                defaultValue: 'number',\n              },\n              {\n                prop: 'max',\n                description: 'Sets the max for number input',\n                type: 'string or number',\n                defaultValue: 'number',\n              },\n              {\n                prop: 'min',\n                description: 'Sets the min for number input',\n                type: 'string or number',\n                defaultValue: 'number',\n              },\n              {\n                prop: 'name',\n                description: 'Name of input',\n                type: 'string',\n                defaultValue: 'n/a',\n              },\n              {\n                prop: 'onChange',\n                description: 'Binds the onChange',\n                type: 'Function',\n                defaultValue: 'n/a',\n              },\n              \n            ]}\n          />\n        </div>\n        </Container>\n        </Section>\n    );\n  }\n}\n\nexport default Documentation;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TimerContext } from '../../context/TimerProvider';\nimport { formatTime } from '../../utils/helpers';\nimport { HR, Li, ListUl } from '../../utils/containers';\n\nconst Label = styled.span`\n  font-size: 18px;\n  margin-right: 1rem;\n`;\n\nconst DisplayRounds = () => {\n\n  const {\n    laps,\n  } = useContext(TimerContext);\n  \n  return (\n    <>\n      <ListUl> {laps.map((lapTime, index) => {\n        const lapNumber = 1 + index;\n        return (\n          <>\n            <Li key={lapTime.id}{...index.id}>\n                <Label>Lap {lapNumber}:</Label>\n              <span>{formatTime(parseFloat(lapTime - laps[index - 1] ? laps[index - 1] : laps[0]))}\n                </span>\n            </Li>\n            <HR />\n          </>\n        );})}\n      </ListUl>\n    </>\n  );\n};\n\nexport default DisplayRounds;","import React, { useContext } from 'react';\nimport { TimerContext } from '../../context/TimerProvider';\nimport Button from './Button';\nimport { FlexBetween, Panel } from '../../utils/containers';\nimport { formatTime } from '../../utils/helpers';\nimport { NavWrapper, Label, Rounds } from '../../utils/containers';\nimport DisplayRounds from './DisplayRounds';\n\nconst Navigation = () => {\n  const {\n    state,\n    sum,\n    queue,\n    timeElapsed\n  } = useContext(TimerContext);\n  \n  const StopButtons = () => {\n    if (queue[0].title === 'Stopwatch' && state.isRunning) {\n      return (\n        <>\n          <Button type='done' />\n          <Button type='lap' />\n        </>\n      );\n    } else {\n      return '';\n    }\n  }\n  \n  //Was Originally going to do Total Time Left, but I wasn't sure how to calculate it with the stopwatch\n  const Nav = () => {\n    if (queue.length >= 1) {\n      return (\n        <>\n          <NavWrapper>\n            <Panel>\n              <FlexBetween>\n                <div>\n                  <Label>Total Time Elapsed:</Label>\n                  <Rounds>{formatTime(Math.abs(timeElapsed))}</Rounds>\n                </div>\n                <Button type={state.isRunning ? 'stop' : 'start'} />\n                <StopButtons />\n                <Button type='reset' />\n                <Button type='skip' />\n              </FlexBetween>\n              <DisplayRounds />\n            </Panel>\n          </NavWrapper>\n        </>\n      );\n    } else {\n      return '';\n    }\n  }\n  return (\n      <Nav />\n    );\n}\n\nexport default Navigation;","import React, { useContext } from 'react';\nimport { TimerContext } from '../../context/TimerProvider';\nimport Button from './Button';\nimport { Section, QueueCard, QueueSurface, FlexBetween } from '../../utils/containers';\nimport { formatTime } from '../../utils/helpers';\n\nconst Queue = () => {\n    const {\n        queue,\n        removeItem,\n    } = useContext(TimerContext);\n    \n    return (\n        <Section>\n            <QueueSurface>\n                <h2>{queue.length > 1 ? 'Queue:' : ''}</h2>\n                {queue.map((timer, index) => (\n                    <QueueCard key={index}>\n                        <FlexBetween>\n                            <span>\n                                {index === 0 ? 'Current' : index}\n                            </span>\n                            <span>\n                                {timer.title}\n                            </span>\n                            <span>\n                                Total Time: {formatTime(timer.totalTime)}\n                            </span>\n                            {timer.rounds ? <span>Rounds: {timer.rounds}</span> : null}\n                        </FlexBetween>\n                        <Section>\n                            <Button\n                                type='remove'\n                                onClick={() => {\n                                    removeItem(index);\n                                }} />\n                        </Section>\n                    </QueueCard>\n                ))}\n            </QueueSurface>\n        </Section>\n    );\n}\n\nexport default Queue;","import React, { useContext } from 'react';\nimport { TimerContext } from '../context/TimerProvider';\nimport Navigation from '../components/generic/Navigation';\nimport { Section, Container, Label } from '../utils/containers';\nimport { Panel, LargeText } from '../utils/containers';\nimport DisplayTime from '../components/generic/DisplayTime';\nimport { Link } from 'react-router-dom';\nimport Button from '../components/generic/Button';\nimport Queue from '../components/generic/Queue';\n\nconst Timer = () => {\n  const {\n    queue,\n    state,\n    currentRound,\n    TimeDisplay,\n    resting,\n  } = useContext(TimerContext);\n \n  const Rounds = () => {\n    if (queue.length > 0 && queue[0].rounds) {\n      return (\n        <>\n          Round: {currentRound}/{queue[0].rounds}\n        </>\n      );\n    } else {\n      return (null);\n    }\n  }\n  const Resting = () => {\n    if(queue.length > 0 && queue[0].title === 'Tabata') {\n       return (\n      <>\n        <Label> Time Left in { resting ? 'Rest' : 'Round'}:</Label>\n      </>\n    );\n    }else {\n      return (null);\n    }\n  }\n  \n  const BeginWorkout = () => {\n    if (!state.isRunning) {\n      return (\n        <>\n          <Container>\n           {queue.length < 1 ? <h1>Create a New Workout!</h1> : ''}\n          </Container>\n          <br />\n          <Container> \n              <Link to='/add'>\n                <Button type='begin' />\n              </Link>\n          </Container>\n        </>\n      );\n    } else {\n      return (\n        <>\n          {null}\n        </>\n      );\n    }\n  }\n  \n  return (\n    <React.Fragment>\n      <Section>\n        <Panel>\n          <DisplayTime>\n            <Section>\n            <Rounds />\n              <Section>\n                <LargeText>\n                <Resting />\n                <TimeDisplay />\n                </LargeText>\n              </Section>\n            </Section>\n          </DisplayTime>\n        </Panel>\n        <Section>\n          <BeginWorkout />\n        </Section>\n        <Queue />\n        <Navigation />\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport default Timer;\n\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TimerContext } from '../context/TimerProvider';\nimport Stopwatch from '../components/timers/Stopwatch';\nimport Countdown from '../components/timers/Countdown';\nimport XY from '../components/timers/XY';\nimport Tabata from '../components/timers/Tabata';\nimport Button from '../components/generic/Button';\nimport { Section, Label, FlexBetween } from '../utils/containers';\nimport { formatTime } from '../utils/helpers';\nimport { Rounds } from '../utils/containers';\nimport { LargeLabel } from '../utils/containers';\nimport { Link } from 'react-router-dom';\n\nconst Timer = styled.div`\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.3rem;\n  text-align: center;\n`;\n\nconst AddView = (props) => {\n  \n  const {\n    sum,\n    selected,\n    setSelected,\n    queue,\n    setQueue,\n    times,\n  } = useContext(TimerContext);\n\n  function clickStopwatch() {\n    setSelected({ Stopwatch: true, Countdown: false, XY: false, Tabata: false });\n  }\n\n  function  clickCountdown() {\n    setSelected({ Stopwatch: false, Countdown: true, XY: false, Tabata: false });\n  }\n\n  function  clickXY() {\n    setSelected({ Stopwatch: false, Countdown: false, XY: true, Tabata: false });\n    }\n\n  function  clickTabata() {\n    setSelected({ Stopwatch: false, Countdown: false, XY: false, Tabata: true });\n  }\n  \n  function GetTimer() {\n    const selectedStopwatch = selected.Stopwatch;\n    const selectedCountdown = selected.Countdown;\n    const selectedXY = selected.XY;\n    const selectedTabata = selected.Tabata;\n\n    if (selectedStopwatch) {\n      return (\n        <>\n          <Timer>\n            <h1>Stopwatch</h1>\n            <Stopwatch />\n            <Section>\n              <Button type='add' onClick={() => { setQueue([...queue, times.stopwatch]);  }} />\n              <br />\n              <Link to='/'>\n                  <Button>Back</Button>\n              </Link>\n            </Section>\n          </Timer>\n        </>\n      );\n    } else if (selectedCountdown) {\n      return (\n        <>\n          <Timer type='countdown'>\n            <h1>Countdown</h1>\n            <Countdown />\n            <Section>\n              <Button type='add' onClick={() => { setQueue([...queue, times.countdown]) }} />\n              <br />\n              <Link to='/'>\n                  <Button>Back</Button>\n              </Link>\n            </Section>\n          </Timer>\n        </>\n      );\n    } else if (selectedXY) {\n      return (\n        <>\n          <Timer type='xy'>\n          <h1>XY</h1>\n            <XY />\n            <Section>\n              <Button type='add'\n                onClick={() => { setQueue([...queue, times.xy]) }} />\n              <br />\n              <Link to='/'>\n                  <Button>Back</Button>\n              </Link>\n            </Section>\n          </Timer>\n        </>\n      );\n    } else if (selectedTabata) {\n      return (\n        <>\n          <Timer type='tabata'>\n          <h1>Tabata</h1>\n          <Tabata />\n            <Section>\n              <Button type='add' onClick={() => { setQueue([...queue, times.tabata]) }} /><br />\n              <Link to='/'>\n                  <Button>Back</Button>\n              </Link>\n            </Section>\n          </Timer>\n        </>\n      );\n    }\n  }\n  return (\n      <Section>\n        <LargeLabel>Select Timer(s):</LargeLabel>\n        <Section>\n          <FlexBetween>\n            <Button\n              type={selected.Stopwatch ? 'default' : 'inactive'}\n              onClick={clickStopwatch}>Stopwatch</Button>\n            <Button\n              type={selected.Countdown ? 'default' : 'inactive'}\n              onClick={clickCountdown}>Countdown</Button>\n            <Button\n              type={selected.XY ? 'default' : 'inactive'}\n              onClick={clickXY}>XY</Button>\n            <Button\n              type={selected.Tabata ? 'default': 'inactive'}\n              onClick={clickTabata}>Tabata</Button>\n          </FlexBetween>\n        </Section>\n        <Timer>\n        <GetTimer selected={selected} />\n        <Label>Total Time:</Label>\n        <Rounds>{formatTime(sum)}</Rounds>\n        </Timer>\n        \n      </Section>\n    );\n}\n\nexport default AddView;\n\n","import { createGlobalStyle } from 'styled-components';\nimport Colors from '../../theme/Colors';\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body {\n  height: 100%;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    background-image: ${Colors.gradient};\n    height: 100vh;\n    overflow: auto;\n    color: ${Colors.white};\n    font-family: 'Inconsolata', monospace;\n}\n\nh3 {\n  \n}\n`;\n\n\n\n\nexport default GlobalStyle;","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TimerProvider from \"./context/TimerProvider\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport Timer from \"./views/TimersView\";\nimport AddView from \"./views/AddView\";\nimport { FlexBetween } from \"./utils/containers\";\nimport GlobalStyles from './components/generic/Styles';\n\nconst StyledLi = styled.li`\n  display: inline-flex;\n  margin: 16px;\n`;\n\nconst StyledLink = styled(Link)`\n  padding: 8px;\n  color: white;\n  font-family: 'Inconsolata', monospace;\n  font-size: 20px;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst StyledUl = styled.ul`\n  padding-left: 0;\n  margin: auto;\n`;\n\nconst Nav = styled.nav`\n  height: auto;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  background-color: #342D9F;\n  transition: .5s ease;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nfunction App() {\n  return (\n    <TimerProvider>\n      <GlobalStyles />\n      {/* <Container> */}\n        <Router>\n          <Nav>\n            <FlexBetween>\n              <StyledUl>\n                <StyledLi >\n                  <StyledLink to=\"/\">Home</StyledLink>\n                </StyledLi >\n                <StyledLi >\n                  <StyledLink to='/docs'>Documentation</StyledLink>\n                </StyledLi >\n                {/* <StyledLi >\n                  <StyledLink to=\"/add\">Add</StyledLink>\n                </StyledLi > */}\n              </StyledUl>\n            </FlexBetween>\n          </Nav>\n          <Routes>\n            <Route path=\"/\" element={<Timer/>} />\n            <Route path='/docs' element={<DocumentationView />} />\n            <Route path=\"/add\" element={<AddView />} />\n          </Routes>\n        </Router>\n        {/* </Container> */}\n      </TimerProvider>    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}